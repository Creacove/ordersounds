
// This file is automatically generated. Do not edit it directly.
import { createClient } from '@supabase/supabase-js';
import type { Database } from './types';

const SUPABASE_URL = "https://uoezlwkxhbzajdivrlby.supabase.co";
const SUPABASE_PUBLISHABLE_KEY = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InVvZXpsd2t4aGJ6YWpkaXZybGJ5Iiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDI3Mzg5MzAsImV4cCI6MjA1ODMxNDkzMH0.TwIkGiLNiuxTdzbAxv6zBgbK1zIeNkhZ6qeX6OmhWOk";

// Import the supabase client like this:
// import { supabase } from "@/integrations/supabase/client";

export const supabase = createClient<Database>(
  SUPABASE_URL,
  SUPABASE_PUBLISHABLE_KEY,
  {
    auth: {
      autoRefreshToken: true,
      persistSession: true
    },
    global: {
      headers: {
        'Content-Type': 'application/json',
        'Authorization': `Bearer ${SUPABASE_PUBLISHABLE_KEY}`,
        'apikey': SUPABASE_PUBLISHABLE_KEY
      },
      fetch: (url, options) => {
        const requestOptions = {
          ...options,
          timeout: 10000, // 10 second timeout
        };
        return fetch(url, requestOptions);
      }
    },
    realtime: {
      params: {
        eventsPerSecond: 1 // Reduce WebSocket message frequency
      },
      // Set a reasonable timeout for WebSocket connections (10 seconds)
      timeout: 10000,
      // Implement an exponential backoff strategy for reconnections
      retryAfter: (attempts) => {
        // Start with 2 seconds, then 4, 8, 16, 32 (max)
        const retryDelay = Math.min(32000, 2000 * Math.pow(2, attempts));
        console.log(`WebSocket reconnect attempt ${attempts}, retry in ${retryDelay}ms`);
        return retryDelay;
      },
      // Limit max reconnection attempts to 5 (instead of default 20)
      maxRetryAttempts: 5
    }
  }
);
